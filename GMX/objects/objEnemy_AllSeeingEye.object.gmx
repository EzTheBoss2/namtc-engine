<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAllSeeingEye</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

battleEnemy = objEnemyBattle_AllSeeingEye

atk = 3;        // Set enemy stats in the create event of child
def = 1;
hp = 5;        
name = "All-Seeing Eye"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if instance_exists(objPlayer) {
    if objPlayer.x &lt; x {
        // outline
        draw_sprite_ext(sprAllSeeingEye, 3, x-1, y, 1, 1, 0, c_black, 1)
        draw_sprite_ext(sprAllSeeingEye, 3, x, y-1, 1, 1, 0, c_black, 1)
        draw_sprite_ext(sprAllSeeingEye, 3, x+1, y, 1, 1, 0, c_black, 1)
        draw_sprite_ext(sprAllSeeingEye, 3, x, y+1, 1, 1, 0, c_black, 1)
        // actual spr
        draw_sprite(sprAllSeeingEye, 3, x, y)
    } else if objPlayer.x &gt; (x+32) {
        // outline
        draw_sprite_ext(sprAllSeeingEye, 4, x-1, y, 1, 1, 0, c_black, 1)
        draw_sprite_ext(sprAllSeeingEye, 4, x, y-1, 1, 1, 0, c_black, 1)
        draw_sprite_ext(sprAllSeeingEye, 4, x+1, y, 1, 1, 0, c_black, 1)
        draw_sprite_ext(sprAllSeeingEye, 4, x, y+1, 1, 1, 0, c_black, 1)
        // actual spr
        draw_sprite(sprAllSeeingEye, 4, x, y)
    } else {
        // outline
        draw_sprite_ext(sprAllSeeingEye, 0, x-1, y, 1, 1, 0, c_black, 1)
        draw_sprite_ext(sprAllSeeingEye, 0, x, y-1, 1, 1, 0, c_black, 1)
        draw_sprite_ext(sprAllSeeingEye, 0, x+1, y, 1, 1, 0, c_black, 1)
        draw_sprite_ext(sprAllSeeingEye, 0, x, y+1, 1, 1, 0, c_black, 1)
        // actual spr
        draw_sprite(sprAllSeeingEye, 0, x, y)
    }
} else {
    // outline
    draw_sprite_ext(sprAllSeeingEye, 0, x-1, y, 1, 1, 0, c_black, 1)
    draw_sprite_ext(sprAllSeeingEye, 0, x, y-1, 1, 1, 0, c_black, 1)
    draw_sprite_ext(sprAllSeeingEye, 0, x+1, y, 1, 1, 0, c_black, 1)
    draw_sprite_ext(sprAllSeeingEye, 0, x, y+1, 1, 1, 0, c_black, 1)
    // actual spr
    draw_sprite(sprAllSeeingEye, 0, x, y)
}

event_inherited(); // make sure to call this AFTER the initial sprite in case it overlaps!
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
