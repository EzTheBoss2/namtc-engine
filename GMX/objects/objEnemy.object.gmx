<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprEnemyPlaceholder</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>myID = -1;

battleEnemy = objEnemyBattle // set through create event of child

atk = 7;        // Set enemy stats in the create event of child
def = 0;
hp = 10;        
name = "Test Enemy"
xp = 1

gradientCol1 = make_colour_rgb(0, 128, 128)
gradientCol2 = make_colour_rgb(0, 0, 128)

mySolid = instance_create(-100, -100, objBlock) // Block for stalemate collision

// debug
mySolid.visible = true;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Make sure to delete the block too
instance_destroy(mySolid)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dmgtaken = atk - global.kidDEF
var dmgtaken2 = global.kidATK - def

// If we should be solid, move the block on top of us

if dmgtaken &lt;= 0 &amp;&amp; dmgtaken2 &lt;= 0 {
    mySolid.x = x
    mySolid.y = y;
} else {
    mySolid.x = -100;
    mySolid.y = -100;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dmgtaken = atk - global.kidDEF
var dmgtaken2 = global.kidATK - def



if dmgtaken &gt; 0 { // We can damage the Kid; do we initiate a fight?
    if dmgtaken2 &gt; 0 { // Both can damage each other; start the fight
        global.enemy = battleEnemy; // what enemy should we load in?
        // Copy stats over, in case someone is doing something weird with creation code
        global.enemyHP = hp;
        global.enemyATK = atk;
        global.enemyDEF = def;
        global.enemyXP = xp;
        global.enemyName = name;
        global.enemyID = myID;
        
        // Copy kid position and room over, to return to the same position
        global.kidOldX = objPlayer.x
        global.kidOldY = objPlayer.y
        global.kidOldGrav = objPlayer.gravity
        global.oldRoom = room;
        
        audio_pause_sound(global.currentMusic)
        
        show_debug_message("Leaving room! global.oldRoom is " + string(global.oldRoom))
        show_debug_message("global.enemyID is " + string(global.enemyID))
        instance_create(0, 0, objTransition)
    } else { // The Kid cannot damage the enemy, and the enemy can damage him
        scrKillPlayer();
    }
    
} else { // We can't damage the Kid; is this instakill?
    if dmgtaken2 &gt; 0 { // The Kid can damage us; die
        audio_play_sound(sndDeath, 0, false)
        global.saveRoomObject[room, myID] = true;
        instance_destroy();
        
    } else { // [EDGE CASE] Neither of us can damage each other; become solid
        // (No collision event)
    }
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

var dmgtaken = atk - global.kidDEF
var dmgtaken2 = global.kidATK - def

if dmgtaken &gt; 0 { // We can damage the Kid; do we initiate a fight?
    if dmgtaken2 &gt; 0 { // Both can damage each other; start the fight
        // Show battle marker
        draw_circle_colour(x + sprite_width - 3, y + 3, 4, c_yellow, c_yellow, false)
    } else { // The Kid cannot damage the enemy, and the enemy can damage him
        // Show invincible marker
        draw_circle_colour(x + sprite_width - 3, y +  3, 4, c_red, c_red, false)
    }
    
} else { // We can't damage the Kid; is this instakill?
    if dmgtaken2 &gt; 0 { // The Kid can damage us; die
        // Show safe marker
        draw_circle_colour(x + sprite_width - 3, y +  3, 4, c_green, c_green, false)
    } else { // [EDGE CASE] Neither of us can damage each other; become solid
        // Show stalemate marker
        draw_circle_colour(x + sprite_width - 3, y +  3, 4, c_gray, c_gray, false)
    
    }
    
}

// Debug display
// draw_text(x, y-64, string(dmgtaken) + "#" + string(dmgtaken2))

// Debug
// draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
